[Unit]
Description=consul
After=docker.service
BindsTo=docker.service

[Service]
Restart=on-failure
RestartSec=20
TimeoutStartSec=0

ExecStartPre=-/usr/bin/docker pull {{ consul_image }}:{{ consul_image_tag }}

# Start the data volume if it doesn't exist. When `docker inspect` runs, it
# will exit 0 on success and 1 on failure. Since we depend on Docker we can
# probably assume it's up, so getting a 1 means we need to create the
# container.
ExecStartPre=/usr/bin/bash -c ' \
    /usr/bin/docker inspect -f "\{\{.Created\}\}" consul-data-volume || \
    /usr/bin/docker run -v /data --name=consul-data-volume tianon/true'

# Clear the connection tracking entries for UDP. See Docker issue #8795.
ExecStartPre=/usr/sbin/conntrack -D -p udp

ExecStart=/usr/bin/docker run \
    --rm \
    --name=consul \
    --hostname={{ inventory_hostname }} \
    --privileged \
    --volumes-from=consul-data-volume \
    --volume=/var/run/docker.sock:/tmp/docker.sock \
    --env=GOMAXPROCS={{ ansible_processor_cores }} \
    -p 8300:8300 \
    -p 8301:8301 \
    -p 8301:8301/udp \
    -p 8302:8302 \
    -p 8302:8302/udp \
    -p 8400:8400 \
    -p 8500:8500 \
    -p 53:53 \
    -p 53:53/udp \
    {{ consul_image }}:{{ consul_image_tag }} \
        -dc {{ consul_dc }} \
        -advertise {{ consul_advertise }} \
        -rejoin \
        -retry-join {{ consul_retry_join }} \
        -data-dir /data
        {%- if consul_is_server %} -server -bootstrap-expect {{ consul_bootstrap_expect }}{% endif %}
        {%- if consul_gossip_key is defined %} -encrypt {{ consul_gossip_key }}{% endif %}

ExecStop=/usr/bin/docker exec consul consul leave

[Install]
WantedBy=multi-user.target
